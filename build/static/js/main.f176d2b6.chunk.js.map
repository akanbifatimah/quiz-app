{"version":3,"sources":["helpers/Contexts.js","components/Menu.js","helpers/Questions.js","components/Quiz.js","components/EndScreen.js","App.js","index.js"],"names":["GameStateContext","createContext","Menu","useContext","setGameState","gameState","userName","setUserName","className","onClick","Questions","Question_category","prompt","optionA","optionB","asnwer","Quiz","useState","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","questions","setQuestions","score","setScore","useEffect","axios","get","then","response","data","results","console","log","category","chooseOption","option","nextQuestion","finishQuiz","length","EndScreen","App","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f176d2b6.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const GameStateContext = createContext(\"\");\r\n","import \"../App.css\";\r\nimport { useContext } from \"react\";\r\nimport { GameStateContext } from \"../helpers/Contexts\";\r\n\r\nfunction Menu() {\r\n\tconst { gameState, setGameState, userName, setUserName } =\r\n\t\tuseContext(GameStateContext);\r\n\treturn (\r\n\t\t<div className=\"Menu\">\r\n\t\t\t<b>\r\n\t\t\t\t\r\n\t\t\t\t<h3>\r\n\t\t\t\t\tWelcome to the <br /> Trivia Challenge!\r\n\t\t\t\t</h3>\r\n\t\t\t</b>\r\n      <h4>You will be presented <br /> with 10 true or false <br /> questions.</h4>\r\n\r\n      <h4>Can you score 100%?</h4>\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetGameState(\"playing\");\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tBegin\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Menu;\r\n","export const Questions = [\r\n  {\r\n    Question_category: \"Entertaniment\",\r\n    prompt: \"What is c++?\",\r\n    optionA: \"true\",\r\n    optionB: \"false\",\r\n    asnwer: \"optionB\",\r\n  },\r\n  {\r\n    Question_category: \"Entertaniment\",\r\n    prompt: \"Which of this is not a programming language?\",\r\n    optionA: \"true\",\r\n    optionB: \"false\",\r\n    asnwer: \"optionA\",\r\n  },\r\n  {\r\n    Question_category: \"Entertaniment\",\r\n    prompt: \"Which of this is not a javascript framework?\",\r\n    optionA: \"true\",\r\n    optionB: \"false\",\r\n    asnwer: \"optionA\",\r\n  },\r\n  {\r\n    Question_category: \"Entertaniment\",\r\n    prompt: \"What is c++?\",\r\n    optionA: \"true\",\r\n    optionB: \"false\",\r\n    asnwer: \"optionB\",\r\n  },\r\n  {\r\n    Question_category: \"Entertaniment\",\r\n    prompt: \"Which of this is not a programming language?\",\r\n    optionA: \"true\",\r\n    optionB: \"false\",\r\n    asnwer: \"optionA\",\r\n  },\r\n  {\r\n    Question_category: \"Entertaniment\",\r\n    prompt: \"Which of this is not a javascript framework?\",\r\n    optionA: \"true\",\r\n    optionB: \"false\",\r\n    asnwer: \"optionA\",\r\n  },\r\n  {\r\n    Question_category: \"Entertaniment\",\r\n    prompt: \"What is c++?\",\r\n    optionA: \"true\",\r\n    optionB: \"false\",\r\n    asnwer: \"optionB\",\r\n  },\r\n  {\r\n    Question_category: \"Entertaniment\",\r\n    prompt: \"Which of this is not a programming language?\",\r\n    optionA: \"true\",\r\n    optionB: \"false\",\r\n    asnwer: \"optionA\",\r\n  },\r\n  {\r\n    Question_category: \"Entertaniment\",\r\n    prompt: \"Which of this is not a javascript framework?\",\r\n    optionA: \"true\",\r\n    optionB: \"false\",\r\n    asnwer: \"optionA\",\r\n  },\r\n  {\r\n    Question_category: \"Entertaniment\",\r\n    prompt: \"Which of this is not a programming language?\",\r\n    optionA: \"true\",\r\n    optionB: \"false\",\r\n    asnwer: \"optionA\",\r\n  },\r\n];\r\n","import \"../App.css\";\r\nimport { Questions } from \"../helpers/Questions\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { GameStateContext } from \"../helpers/Contexts\";\r\n\r\nfunction Quiz() {\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [optionChosen, setOptionChosen] = useState(\"\");\r\n  const [questions, setQuestions] =useState([])\r\n\tconst { score, setScore, setGameState } = useContext(GameStateContext);\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean\")\r\n\t\t\t.then((response) => setQuestions(response.data.results));\r\n\t}, []);\r\n  console.log(questions.category)\r\n\r\n\tconst chooseOption = (option) => {\r\n\t\tsetOptionChosen(option);\r\n\t};\r\n\r\n\tconst nextQuestion = () => {\r\n\t\tif (Questions[currentQuestion].asnwer === optionChosen) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\t\tsetCurrentQuestion(currentQuestion + 1);\r\n\t};\r\n\r\n\tconst finishQuiz = () => {\r\n\t\tif (Questions[currentQuestion].asnwer === optionChosen) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\t\tsetGameState(\"finished\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"Quiz\">\r\n\t\t\t<h1>{Questions[currentQuestion].Question_category}</h1>\r\n\t\t\t<div className=\"lower\">\r\n\t\t\t\t<h1>{Questions[currentQuestion].prompt}</h1>\r\n\t\t\t\t<div className=\"questions\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tchooseOption(\"optionA\");\r\n\t\t\t\t\t\t\tif (currentQuestion === Questions.length - 1) {\r\n\t\t\t\t\t\t\t\tfinishQuiz();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnextQuestion();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Questions[currentQuestion].optionA}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tchooseOption(\"optionB\");\r\n\t\t\t\t\t\t\tif (currentQuestion === Questions.length - 1) {\r\n\t\t\t\t\t\t\t\tfinishQuiz();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnextQuestion();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Questions[currentQuestion].optionB}\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t{/* {currentQuestion == Questions.length - 1 ? (\r\n          <button onClick={finishQuiz} >Finish Quiz</button>\r\n        ) :(<button onClick={nextQuestion}>Next</button>)} */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useContext } from \"react\";\r\nimport { GameStateContext } from \"../helpers/Contexts\";\r\nimport { Questions } from \"../helpers/Questions\";\r\n\r\nconst EndScreen = () => {\r\n  const { score, setScore, setGameState, userName } = useContext(\r\n    GameStateContext\r\n  );\r\n\r\n  const restartQuiz = () => {\r\n    setScore(0);\r\n    setGameState(\"menu\");\r\n  };\r\n  return (\r\n    <div className=\"EndScreen\">\r\n      <h1>You scored</h1>\r\n      <h1>\r\n        {score} / {Questions.length}\r\n      </h1>\r\n      <button onClick={restartQuiz}>Play Again?</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndScreen;\r\n","import \"./App.css\";\r\nimport Menu from \"./components/Menu\";\r\nimport Quiz from \"./components/Quiz\";\r\nimport EndScreen from \"./components/EndScreen\";\r\nimport { useState } from \"react\";\r\nimport { GameStateContext } from \"./helpers/Contexts\";\r\n// ['menu', 'playing', 'finished']\r\nfunction App() {\r\n  const [gameState, setGameState] = useState(\"menu\");\r\n\r\n  const [score, setScore] = useState(0);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <GameStateContext.Provider\r\n        value={{\r\n          gameState,\r\n          setGameState,\r\n          score,\r\n          setScore,\r\n        }}\r\n      >\r\n        {gameState === \"menu\" && <Menu />}\r\n        {gameState === \"playing\" && <Quiz />}\r\n        {gameState === \"finished\" && <EndScreen />}\r\n      </GameStateContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}